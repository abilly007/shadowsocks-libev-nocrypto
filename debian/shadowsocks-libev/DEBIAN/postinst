#!/bin/sh

set -e

# POSIX-compliant maint function recommend by devref
# to check for the existence of a command
# https://www.debian.org/doc/manuals/developers-reference/ch06.html#bpp-debian-maint-scripts
pathfind() {
	OLDIFS="$IFS"
	IFS=:
	for p in $PATH; do
		if [ -x "$p/$*" ]; then
		IFS="$OLDIFS"
		return 0
		fi
	done
	IFS="$OLDIFS"
	return 1
}

case "$1" in
	configure|reconfigure)
		pathfind setcap && setcap \
			cap_net_bind_service+ep /usr/bin/ss-local \
			cap_net_bind_service,cap_net_admin+ep /usr/bin/ss-redir \
			cap_net_bind_service+ep /usr/bin/ss-server \
			cap_net_bind_service+ep /usr/bin/ss-tunnel
		if [ ! -f /etc/shadowsocks-libev/config.json ]; then
			set +e
			pathfind apg
			if [ $? -eq 0 ]; then
				passwd=$(apg -n 1 -M ncl)
			else
				passwd=$(pwgen 12 1)
			fi
			set -e
			mkdir -p /etc/shadowsocks-libev
			sed "s/barfoo!/$passwd/" /usr/share/shadowsocks-libev/config.json \
				> /etc/shadowsocks-libev/config.json
		fi
		;;
	abort-upgrade|abort-remove|abort-deconfigure)
		exit 0
		;;
	*)
		echo "postinst called with unknown argument \`$1'" >&2
		exit 0
		;;
esac

# Automatically added by dh_systemd_enable
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask shadowsocks-libev.service >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled shadowsocks-libev.service; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable shadowsocks-libev.service >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state shadowsocks-libev.service >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_installinit
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ]; then
	if [ -x "/etc/init.d/shadowsocks-libev" ]; then
		update-rc.d shadowsocks-libev defaults >/dev/null
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		invoke-rc.d shadowsocks-libev $_dh_action || exit $?
	fi
fi
# End automatically added section


exit 0
